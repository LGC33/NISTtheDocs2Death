# This is a basic workflow that is manually triggered

name: NISTtheDocs2Death
description: Deploys Sphinx-built documentation to https://pages.nist.gov
author: Jonathan Guyer

inputs:
  docs-folder:
    description:
      The folder containing your sphinx docs.
    required: true
    default: "docs/"
  pages-branch:
    description: 
      The branch linked to your documentation server.
    default: 'nist-pages'

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - uses: usnistgov/sphinx-action@master
      name: Build HTML
      with:
        docs-folder: docs/
#       - uses: usnistgov/sphinx-action@master
#         name: Build ePUB
#         with:
#           docs-folder: docs/
#           build-command: make epub
#       - uses: usnistgov/sphinx-action@latexpdf
#         name: Build PDF
    - name: Commit documentation changes
      shell: bash
      run: |
        python ntd2d.py

        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Update documentation for ${{ github.ref_name }}@${{ github.sha }}" -a || true
        # The above command will fail if no changes were present, so we ignore
        # the return code.
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        branch: ${{ inputs.pages-branch }}
        directory: nist-pages
        github_token: ${{ github.token }}
    - uses: actions/upload-artifact@v3
      name: Upload Documentation Artifacts
      with:
        name: ${{ github.event.repository.name }}-${{ github.ref_name }}-${{ github.sha }}
        path: |
          docs/_build/html
#             docs/_build/epub/*.epub
#             docs/_build/latex/${{ github.event.repository.name }}.pdf
      # Use always() to always run this step to publish documentation
      # artifacts even when there are failures
      if: ${{ always() }}
