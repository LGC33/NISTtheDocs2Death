# This is a basic workflow that is manually triggered

name: NISTtheDocs2Death
description: Deploys Sphinx-built documentation to https://pages.nist.gov
author: Jonathan Guyer

inputs:
  docs-folder:
    description:
      The folder containing your sphinx docs.
    required: true
    default: "docs/"
  pages-branch:
    description: 
      The branch linked to your documentation server.
    default: 'nist-pages'

runs:
  using: "composite"
  steps:
    - name: Commit documentation changes
      run: |
        git clone ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}.git \
          --branch ${INPUT_PAGES-BRANCH} \
          --single-branch nist-pages
        cd nist-pages

        html="html"

        # store built documents in directory named for current branch
        # remove any previous directory of that name
        git rm -r --ignore-unmatch "${html}/${GITHUB_REF_NAME}"
        cp -r ../${INPUT_DOCS-FOLDER}_build/html "${html}/${GITHUB_REF_NAME}"

        # store built documents in latest/
        # (but only do this for default branch of repo)
        if ${GITHUB_REF_NAME} == ${GITHUB_EVENT_REPOSITORY_DEFAULT_BRANCH}
        then
          # remove any previous directory of that name
          git rm -r --ignore-unmatch "${html}/latest"
          cp -r ../${INPUT_DOCS-FOLDER}_build/html "${html}/latest"
        fi

        # jekyll conflicts with sphinx' underlined directories and files
        touch .nojekyll

        # build index.html with available documentation versions
        rm -f index.html
        cat _templates/index_header.html >> index.html
        echo "<div class=\"documentation-versions\">" >> index.html
        echo "<ul>" >> index.html
        for path in ${html}/*
        do
            version="${path##*/}"
            echo "<li><a href=\"${path}\">${version}</a>" >> index.html
        done
        echo "</ul>" >> index.html
        echo "</div>" >> index.html
        cat _templates/index_footer.html >> index.html

        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Update documentation for ${GITHUB_REF_NAME}@${GITHUB_SHA}" -a || true
        # The above command will fail if no changes were present, so we ignore
        # the return code.
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        branch: ${INPUT_PAGES-BRANCH}
        directory: nist-pages
        github_token: ${GITHUB_TOKEN}
